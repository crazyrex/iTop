{% extends 'layout.txt.twig' %}

{% block javascripts %}
<script type="text/javascript">

</script>
{% endblock %}

{% block content %}
====== {{ node.name }} ======
{{ node.summary }}
{{ node.description|raw }}


{% for tagName,tags in node.tags if tagName in ['example'] %}
{% if loop.first %}
===== Examples =====
{% endif %}
{% for tag in tags %}
===== {{ tag.description|escape }} =====
<code php>{{ tag.example|escape }}</code>
{% endfor %}
{% endfor %}


                    {#<h2>Summary</h2>#}
                    {#<section class="row-fluid heading">#}
                        {#<section class="span4">#}
                            {#<a href="#methods">Methods</a>#}
                        {#</section>#}
                        {#<section class="span4">#}
                            {#<a href="#properties">Properties</a>#}
                        {#</section>#}
                        {#<section class="span4">#}
                            {#<a href="#constants">Constants</a>#}
                        {#</section>#}
                    {#</section>#}
                    {#<section class="row-fluid public">#}
                        {#<section class="span4">#}
                            {#{% for method in node.inheritedMethods.merge(node.methods.merge(node.magicMethods)) if method.visibility == 'public' %}#}
                                {#<a href="{{ method|route('url')}}" class="{{ method.deprecated ? 'deprecated' }}">{{ method.name }}()</a><br />#}
                            {#{% else %}#}
                                {#<em>No public methods found</em>#}
                            {#{% endfor %}#}
                        {#</section>#}
                        {#<section class="span4">#}
                            {#{% for property in node.inheritedProperties.merge(node.properties.merge(node.magicProperties)) if property.visibility == 'public' %}#}
                                {#<a href="{{ property|route('url')}}" class="{{ property.deprecated ? 'deprecated' }}">${{ property.name }}</a><br />#}
                            {#{% else %}#}
                                {#<em>No public properties found</em>#}
                            {#{% endfor %}#}
                        {#</section>#}
                        {#<section class="span4">#}
                            {#{% for constant in node.inheritedConstants.merge(node.constants) %}#}
                                {#<a href="{{ constant|route('url')}}" class="{{ constant.deprecated ? 'deprecated' }}">{{ constant.name }}</a><br />#}
                            {#{% else %}#}
                                {#<em>No constants found</em>#}
                            {#{% endfor %}#}
                        {#</section>#}
                    {#</section>#}
                    {#<section class="row-fluid protected">#}
                        {#<section class="span4">#}
                            {#{% for method in node.inheritedMethods.merge(node.methods.merge(node.magicMethods)) if method.visibility == 'protected' %}#}
                                {#<a href="{{ method|route('url')}}" class="{{ method.deprecated ? 'deprecated' }}">{{ method.name }}()</a><br />#}
                            {#{% else %}#}
                                {#<em>No protected methods found</em>#}
                            {#{% endfor %}#}
                        {#</section>#}
                        {#<section class="span4">#}
                            {#{% for property in node.inheritedProperties.merge(node.properties.merge(node.magicProperties)) if property.visibility == 'protected' %}#}
                                {#<a href="{{ property|route('url')}}" class="{{ property.deprecated ? 'deprecated' }}">${{ property.name }}</a><br />#}
                            {#{% else %}#}
                                {#<em>No protected properties found</em>#}
                            {#{% endfor %}#}
                        {#</section>#}
                        {#<section class="span4">#}
                            {#<em>N/A</em>#}
                        {#</section>#}
                    {#</section>#}
                    {#<section class="row-fluid private">#}
                        {#<section class="span4">#}
                            {#{% for method in node.inheritedMethods.merge(node.methods.merge(node.magicMethods)) if method.visibility == 'private' %}#}
                                {#<a href="{{ method|route('url')}}" class="{{ method.deprecated ? 'deprecated' }}">{{ method.name }}()</a><br />#}
                            {#{% else %}#}
                                {#<em>No private methods found</em>#}
                            {#{% endfor %}#}
                        {#</section>#}
                        {#<section class="span4">#}
                            {#{% for property in node.inheritedProperties.merge(node.properties.merge(node.magicProperties)) if property.visibility == 'private' %}#}
                                {#<a href="{{ property|route('url')}}" class="{{ property.deprecated ? 'deprecated' }}">${{ property.name }}</a><br />#}
                            {#{% else %}#}
                                {#<em>No private properties found</em>#}
                            {#{% endfor %}#}
                        {#</section>#}
                        {#<section class="span4">#}
                            {#<em>N/A</em>#}
                        {#</section>#}
                    {#</section>#}
                {#</section>#}
            {#</div>#}



{% if node.abstract %}abstract{% endif %}
{% if node.final %}final{% endif %}
{% if method.deprecated %}<del>Deprecated</del> //{{ method.tags.deprecated[0].description }}//{% endif %}

{% set class = node.parent %}
{% block hierarchy_element %}
{% if class %}
== hierarchy ==
{% set child = class %}
{% set class = class.parent %}
{{ block('hierarchy_element') }}
{{ child|route|raw }}
{% endif %}
{% endblock %}

{{ node.fullyQualifiedStructuralElementName}}

{% for interface in node.interfaces %}
{% if loop.first %}
== Implements ==
{% endif %}
{% if loop.length > 1 %}  * {% endif %}{{ interface }}
{#{{ interface.fullyQualifiedStructuralElementName }}#}
{% endfor %}

{% for trait in node.usedTraits %}
{% if loop.first %}
== Uses traits ==
{% endif %}
{% if loop.length > 1 %}  * {% endif %}{{ trait }}
    {#<dd>#}
        {#{% if trait.fullyQualifiedStructuralElementName %}<a href="{{ trait|route('url') }}">{% endif %}#}
            {#<div class="namespace-wrapper">{{ trait.fullyQualifiedStructuralElementName ?: trait }}</div>#}
        {#{% if trait.fullyQualifiedStructuralElementName %}</a>{% endif %}#}
    {#</dd>#}
{% endfor %}



{% for tagName,tags in node.tags if tagName in ['link', 'see'] %}
{% if loop.first %}
== See also ==
{% endif %}
{% for tag in tags %}
{% if loop.length > 1 %}  * {% endif %}{{ tag.reference ?: tag.link }} : {{ tag.description ?: tag.reference }}
{% endfor %}
{% endfor %}

===== Tags =====
^
{% for tagName,tags in node.tags if tagName not in ['link', 'see', 'abstract', 'example', 'method', 'property', 'property-read', 'property-write', 'package', 'subpackage'] %}
{{ tagName }} ^
{% endfor %}
|
{% for tagName,tags in node.tags if tagName not in ['link', 'see', 'abstract', 'example', 'method', 'property', 'property-read', 'property-write', 'package', 'subpackage'] %}
 {% for tag in tags %}{{ tag.description}}{% endfor %}   |
{% endfor %}

                    {#<tr>#}
                        {#<th>#}
                            {#{{ tagName }}#}
                        {#</th>#}
                        {#<td>#}
                            {#{% for tag in tags %}#}
                                {#{{ tag.description|markdown|raw }}#}
                            {#{% endfor %}#}
                        {#</td>#}
                    {#</tr>#}
                {#{% else %}#}
                    {#<tr><td colspan="2"><em>None found</em></td></tr>#}
                {#{% endfor %}#}
                {#</table>#}
            {#</aside>#}
        {#</div>#}

{% set constants = node.inheritedConstants.merge(node.constants) %}
{% if constants|length > 0 %}
===== Constants =====

{% for constant in constants %}
{{ block('constant') }}
{% endfor %}
{% endif %}

{% set properties = node.inheritedProperties.merge(node.properties.merge(node.magicProperties)) %}
{% if properties|length > 0 %}
===== Properties =====
{% for property in properties if property.visibility == 'public' %}
{{ block('property') }}
{% endfor %}
{% for property in properties if property.visibility == 'protected' %}
{{ block('property') }}
{% endfor %}
{% for property in properties if property.visibility == 'private' %}
{{ block('property') }}
{% endfor %}
{% endif %}


{% set methods = node.inheritedMethods.merge(node.methods.merge(node.magicMethods)) %}
{% if methods|length > 0 %}

===== Methods =====
{% for method in methods if method.visibility == 'public' %}
{{ block('method') }}
{% endfor %}
{% for method in methods if method.visibility == 'protected' %}
{{ block('method') }}
{% endfor %}
{% for method in methods if method.visibility == 'private' %}
{{ block('method') }}
{% endfor %}
{% endif %}


{% endblock %}
